pfSQLSettings
=============

Достаточно простой класс, который реализует простое хранилище ключ-значение в базе данных. В первую очередь это нужно для хранения различного рода настроек для приложения. Поскольку таких настроек не много (обычно несколько десятков), а значения небольшие, то класс сразу загружает настройки в память и не делает «лишних» запросов к СУБД.
                                 
Использование крайне простое:
               
  $csql[^pfMySQL::create[$SQL.connect-string]]
  $settings[^pfSQLSettings::create[$.sql[$csql]]]
  $settings.name[Sumo]
  $settings.name
  ^settings.get[year;1976]


Структура таблицы в БД:

  CREATE TABLE `settings` (
    `key` varchar(255) NOT NULL,
    `value` longtext,
    `description` text,
    PRIMARY KEY (`key`)
  );

Фичи:
  - Название таблицы может быть любым, поэтому в конструктор можно передать параметр $.tableName[имя_вашей_таблицы]. Кроме того можно задать названия для столбцов ключей и значений - $.keyColumn[key], $.valueColumn[value]. 
  - Поле description в самом классе не используется, но очень рекомендую его заполнить в базе, чтобы можно было понять что значит параметр при просмотре таблицы.
  - Чтобы включить игнорирование регистра символов в ключах передайте в конструктор параметр $.ignoreKeyCase(true). Очень часто такое поведение удобно.
  - Свойство $ALL возвращает хеш со всеми данными.
  
