PF Library
Copyright (c) Oleg Volchkov
-------------------------------------

TO-DO List...

* Перейти на повсеместное использование pfAssert для обработки утверждений.
* Покрыть unit-тестами как можно больше классов.

* Переход на utf-8.

---------------------------------

Добавить метод pfTemplet.renderString, который сможет грузить шаблон из строки.

---------------------------------

* Сделать возможность передавать в обработчики экшнов не только хеши, но и классы.
  + Метод cleanMethodArgument теперь не "убивает" параметр, если он не хеш. 

* Работа с формами
    web/forms/*
    http://www.djangoproject.com/documentation/newforms/

pfCurlFie
  * Добавить в конструктор проверку входных параметров.
  * Сделать передачу пути к curl'у прямо в конструкторе. 
  * Сделать проверку сертификатов и ключей для SSL.
  * Проверить работу по ftp/ftps. 
  * Сделать работу по протоколу file.
  * Добавить поддержку редиректов для протокола http.
  * Сделать работу с датами при передаче заголовков удаленному серверу.
  * Проверить работу http-авторизации.
  * Сделать работу с cookie.

* Работа с сессиями (анонимными и пользовательскими) 
  с возможность использования разных хранилищ данных.

* Generic-модули для поддержки CRUD-архитектуры.

* Работа с REST-сервисами.
  * Модуль умеющий маршрутизировать rest-запросы
  * Класс с функциями для реализации доступа к rest-сервисам.

pfCache
  * Рефакторинг класса для работы с разными хранилищами данных.

pfTemplet
  * Рефакторинг движка: сделать возможность использования разных языков шаблоннов,
    добавить XSL и FastTemplate.

pfModule
  * Сделать методы для обратного преобразования урлов на основании
    карты преобразований.

pfString
  * Добавить методы bin2dec
  - Добавить методы int2hex И hex2int

sql/pfSQL
  * Сделать накапливание статистики

Коллекции
  ? Реализовать метод equals во всех коллекциях
  ? Сделать поиск в pfArrayList

Тесты
  * Доделать полноценную систему классов для тестирования


* Сериализация/десереализация встроенных типов
	types/pfSerialize
	types/pfDeserialize

* Типы данных
  types/pfDecimal
	types/pfMoney
	types/pfDate

* Работа с правами пользователей (видимо на основе политик)
	auth/pfSecurity

* Портировать классы для работы с PgSQL, MSSQL
	sql/pfPgSQL
	sql/pfMSSQL
      

  
---------------------------------

* Скрипт pf-admin.py, который создает необходимые папки и скрипты для стандартного pf-проекта. 
* ORM?

